"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCriticalStyleStream = exports.processReact = exports.processPlain = exports.process = void 0;
var stream_1 = require("stream");
var config_1 = require("../config");
var getCSS_1 = require("../getCSS");
var async_1 = require("../utils/async");
var cache_1 = require("../utils/cache");
var string_1 = require("../utils/string");
var process = function (chunk, line, callback) {
    return (0, config_1.isReact)() ? (0, exports.processReact)(chunk, line, callback) : (0, exports.processPlain)(chunk, line, callback);
};
exports.process = process;
var processPlain = function (chunk, line, callback) {
    var data = line.tail + chunk;
    var lastBrace = (0, string_1.findLastBrace)(data);
    var usedString = data.substring(0, lastBrace);
    callback(usedString);
    line.tail = data.substring(lastBrace);
    return usedString;
};
exports.processPlain = processPlain;
var processReact = function (chunk, _line, callback) {
    callback(chunk);
    return chunk;
};
exports.processReact = processReact;
var createCriticalStyleStream = function (def) {
    var line = (0, cache_1.createLine)();
    var injections = [];
    var filter = (0, cache_1.createUsedFilter)();
    var styleCallback = function (content) {
        var style = (0, getCSS_1.criticalStylesToString)(content, def, filter);
        style && injections.push(style);
    };
    var tick = 0;
    return new stream_1.Transform({
        transform: function (chunk, _, _callback) {
            (0, async_1.assertIsReady)(def);
            injections = [];
            if (tick === 0) {
                var staticStyles = (0, getCSS_1.extractAllUnmatchableAsString)(def);
                staticStyles && injections.push(staticStyles);
            }
            tick++;
            var chunkData = Buffer.from((0, exports.process)(chunk.toString('utf-8'), line, styleCallback), 'utf-8');
            _callback(undefined, injections.join('') + chunkData);
        },
        flush: function (flushCallback) {
            flushCallback(undefined, line.tail);
        },
    });
};
exports.createCriticalStyleStream = createCriticalStyleStream;
