function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) {
        return false;
    }
    for (let i = 0; i < newInputs.length; i++) {
        if (newInputs[i] !== lastInputs[i]) {
            return false;
        }
    }
    return true;
}
export function memoizeOne(resultFn) {
    let lastArgs = [];
    let lastResult;
    let calledOnce = false;
    function memoized() {
        const newArgs = [];
        for (let _i = 0; _i < arguments.length; _i++) {
            newArgs[_i] = arguments[_i];
        }
        if (calledOnce && areInputsEqual(newArgs, lastArgs)) {
            return lastResult;
        }
        lastResult = resultFn.apply(undefined, newArgs);
        calledOnce = true;
        lastArgs = newArgs;
        return lastResult;
    }
    return memoized;
}
