var classish = function (str) { return !!str && str.indexOf('.') >= 0; };
export var mapStyles = function (styles) {
    return (styles
        .replace(/({[^{}]+})/g, '$')
        .replace(/({[^{}]+})/g, '$')
        .match(/\.([^>~,+$:{\[\s]+)?/g) || [])
        .map(function (x) { return x.replace(/[\s,.>~+$]+/, ''); })
        .map(function (x) { return x.replace(/[.\s.:]+/, ''); });
};
export var extractParents = function (selector) {
    var cleanSelector = selector.replace(/\(([^)])*\)/g, '').replace(/(\\\+)/g, 'PLUS_SYMBOL');
    var parts = cleanSelector.split(' ');
    parts.pop();
    var ruleSelection = parts.join(' ').match(/\.([^>~+$:{\[\s]+)?/g) || [];
    var effectiveMatcher = ruleSelection.filter(classish);
    var selectors = effectiveMatcher.map(function (x) { return x.replace(/[.\s.:]+/, '').replace(/PLUS_SYMBOL/g, '+'); }).filter(Boolean);
    return selectors;
};
export var mapSelector = function (selector) {
    var cleanSelector = selector.replace(/\(([^)])*\)/g, '').replace(/(\\\+)/g, 'PLUS_SYMBOL');
    var ruleSelection = cleanSelector.match(/\.([^>~+$:{\[\s]+)?/g) || [];
    ruleSelection.reverse();
    var effectiveMatcher = ruleSelection.find(classish) || '';
    var selectors = effectiveMatcher.match(/(\.[^.>~+,$:{\[\s]+)?/g);
    return (selectors || []).map(function (x) { return x.replace(/[.\s.:]+/, '').replace(/PLUS_SYMBOL/g, '+'); }).filter(Boolean);
};
